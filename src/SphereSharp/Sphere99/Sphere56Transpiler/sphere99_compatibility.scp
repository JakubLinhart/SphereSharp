[function strgetascii]
return <asc "<strsub <argv[1]> 1 <argv[0]>>">

[function safe]
return <args>

[function ei]
if (<argv> > 0)
  EvaluatingIntel=<argv[0]>
else
  return <EvaluatingIntel>
endif

[function resist]
if (<argv> > 0)
  MagicResistance=<argv[0]>
else
  return <MagicResistance>
endif

[function MEMORY_FIGHT]
return 00004

[function statf_dead]
return 000000002

[function rand]
return <eval {0 <argv[0]>}>

[function flag_invisible]
if (<argv> > 0)
  if (<argv[0]>)
    flags=<flags>|statf_invisible
  else
    flags=<flags>&~statf_invisible
  endif
else
  if <flags>&statf_invisible
    return 1
  endif
  return 0
endif

[function flag_hidden]
if (<argv> > 0)
  if (<argv[0]>)
    flags=<flags>|statf_hidden
  else
    flags=<flags>&~statf_hidden
  endif
else
  if <flags>&statf_hidden
    return 1
  endif
  return 0
endif

[function flag_invul]
if (<argv> > 0)
  if (<argv[0]>)
    flags=<flags>|statf_invul
  else
    flags=<flags>&~statf_invul
  endif
else
  if <flags>&statf_invul
    return 1
  endif
  return 0
endif

[function flag_insubstantial]
if (<argv> > 0)
  if (<argv[0]>)
    flags=<flags>|statf_insubstantial
  else
    flags=<flags>&~statf_insubstantial
  endif
else
  if <flags>&statf_insubstantial
    return 1
  endif
  return 0
endif

[function flag_freeze]
if (<argv> > 0)
  if (<argv[0]>)
    flags=<flags>|statf_freeze
  else
    flags=<flags>&~statf_freeze
  endif
else
  if <flags>&statf_freeze
    return 1
  endif
  return 0
endif

[function flag_stone]
if (<argv> > 0)
  if (<argv[0]>)
    flags=<flags>|statf_stone
  else
    flags=<flags>&~statf_stone
  endif
else
  if <flags>&statf_stone
    return 1
  endif
  return 0
endif

[function flag_poisoned]
if (<argv> > 0)
  if (<argv[0]>)
    flags=<flags>|statf_poisoned
  else
    flags=<flags>&~statf_poisoned
  endif
else
  if <flags>&statf_poisoned
    return 1
  endif
  return 0
endif

// There is no statf_immobile on .56. STATF_Hovering on Sphere .56 has the same value as statf_immobile on Sphere .99
// Semantically similar is statf_freeze.
[function flag_immobile]
if (<argv> > 0)
  if (<argv[0]>)
    flags=<flags>|STATF_Freeze
  else
    flags=<flags>&~STATF_Freeze
  endif
else
  if <flags>&STATF_Freeze
    return 1
  endif
  return 0
endif

[function flag_war]
if (<argv> > 0)
  if (<argv[0]>)
    flags=<flags>|statf_war
  else
    flags=<flags>&~statf_war
  endif
else
  if <flags>&statf_war
    return 1
  endif
  return 0
endif

[function flag_nightsight]
if (<argv> > 0)
  if (<argv[0]>)
    flags=<flags>|statf_nightsight
  else
    flags=<flags>&~statf_nightsight
  endif
else
  if <flags>&statf_nightsight
    return 1
  endif
  return 0
endif


[function newequip]
newitem <args>
equip <new>

[function distancefrom]
if (<argv>)
  return <distance <<args>>>
else
  return <distance>
return

[function StrGetTok]
return <f__StrGetTok_core <argv[1]>,<explode <argv[2]>,<argv[0]>>>

[function f__StrGetTok_core]
local.idx=<eval <argv[0]>+1>
return <argv[<local.idx>]>

[function serverTime]
return <serv.rtime>

[function statclients]
return <serv.clients>

[function attr_movenever]
if (<argv> > 0)
  if (<argv[0]>)
    attr=<attr>|<def.attr_move_never>
  else
    attr=<attr>&~<def.attr_move_never>
  endif
else
  if <attr>&<def.attr_move_never>
    return <def.attr_move_never>
  endif
  return 0
endif

[function attr_static]
if (<argv> > 0)
  if (<argv[0]>)
    attr=<attr>|<def.attr_static>
  else
    attr=<attr>&~<def.attr_static>
  endif
else
  if <attr>&<def.attr_static>
    return <def.attr_static>
  endif
  return 0
endif

[function attr_decay]
serv.log attr_decay <attr>
if (<argv> > 0)
  if (<argv[0]>)
    attr=<attr>|<def.attr_decay>
  else
    attr=<attr>&~<def.attr_decay>
  endif
else
  if <attr>&<def.attr_decay>
    return <def.attr_decay>
  endif
  return 0
endif

[function attr_invis]
serv.log attr_invis <attr>
if (<argv> > 0)
  if (<argv[0]>)
    attr=<attr>|<def.attr_invis>
  else
    attr=<attr>&~<def.attr_invis>
  endif
else
  if <attr>&<def.attr_invis>
    return <def.attr_invis>
  endif
  return 0
endif

[function op_shiftleft]
return "<<"

[function op_shiftright]
return ">>"

[function setdialogtext]
local.ctagname=dialogtext_<argv[0]>_<argv[1]>
ctag.<local.ctagname>=<argv[2]>

[function getdialogtext]
local.ctagname=dialogtext_<argv[0]>_<argv[1]>
return <ctag.<local.ctagname>>

[function srccanseelos]
return <canseelos>

[function mapplane]
return <map>

[function p_x]
return <p.x>

[function p_y]
return <p.y>

[function p_z]
return <p.z>


