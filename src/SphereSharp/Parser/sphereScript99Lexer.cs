//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /work/sphereScript99.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public partial class sphereScript99Lexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, NEWLINE=5, WS=6, EOF_SECTION_HEADER=7, 
		FUNCTION_SECTION_HEADER_START=8, IF=9, ELSEIF=10, ELSE=11, ENDIF=12, SYMBOL=13, 
		NUMBER=14, EQUAL=15, ASSIGN=16, NOT_EQUAL=17, MORE_THAN=18, LESS_THAN=19, 
		PLUS=20, MINUS=21, MULTIPLY=22, MORE_THAN_EQUAL=23, LESS_THAN_EQUAL=24, 
		LPAREN=25, RPAREN=26;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "NEWLINE", "WS", "EOF_SECTION_HEADER", 
		"FUNCTION_SECTION_HEADER_START", "IF", "ELSEIF", "ELSE", "ENDIF", "SYMBOL", 
		"NUMBER", "EQUAL", "ASSIGN", "NOT_EQUAL", "MORE_THAN", "LESS_THAN", "PLUS", 
		"MINUS", "MULTIPLY", "MORE_THAN_EQUAL", "LESS_THAN_EQUAL", "VALID_SYMBOL_START", 
		"VALID_SYMBOL_CHAR", "DIGIT", "LPAREN", "RPAREN"
	};


	public sphereScript99Lexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public sphereScript99Lexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "']'", "'.'", "','", "'['", null, null, null, null, null, null, 
		null, null, null, null, "'=='", "'='", "'!='", "'>'", "'<'", "'+'", "'-'", 
		"'*'", null, null, "'('", "')'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, "NEWLINE", "WS", "EOF_SECTION_HEADER", "FUNCTION_SECTION_HEADER_START", 
		"IF", "ELSEIF", "ELSE", "ENDIF", "SYMBOL", "NUMBER", "EQUAL", "ASSIGN", 
		"NOT_EQUAL", "MORE_THAN", "LESS_THAN", "PLUS", "MINUS", "MULTIPLY", "MORE_THAN_EQUAL", 
		"LESS_THAN_EQUAL", "LPAREN", "RPAREN"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "sphereScript99.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static sphereScript99Lexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x1C', '\xAA', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', '\x1A', '\x4', 
		'\x1B', '\t', '\x1B', '\x4', '\x1C', '\t', '\x1C', '\x4', '\x1D', '\t', 
		'\x1D', '\x4', '\x1E', '\t', '\x1E', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x6', '\x5', '\x6', 'G', '\n', '\x6', '\x3', '\x6', '\x6', 
		'\x6', 'J', '\n', '\x6', '\r', '\x6', '\xE', '\x6', 'K', '\x3', '\a', 
		'\x3', '\a', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', 
		'\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', 
		'\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', 
		'\t', '\x3', '\t', '\x6', '\t', '\x61', '\n', '\t', '\r', '\t', '\xE', 
		'\t', '\x62', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\v', '\x3', 
		'\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', 
		'\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', 
		'\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', 
		'\x3', '\xE', '\x3', '\xE', '\a', '\xE', '|', '\n', '\xE', '\f', '\xE', 
		'\xE', '\xE', '\x7F', '\v', '\xE', '\x3', '\xF', '\x6', '\xF', '\x82', 
		'\n', '\xF', '\r', '\xF', '\xE', '\xF', '\x83', '\x3', '\x10', '\x3', 
		'\x10', '\x3', '\x10', '\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x3', 
		'\x12', '\x3', '\x12', '\x3', '\x13', '\x3', '\x13', '\x3', '\x14', '\x3', 
		'\x14', '\x3', '\x15', '\x3', '\x15', '\x3', '\x16', '\x3', '\x16', '\x3', 
		'\x17', '\x3', '\x17', '\x3', '\x18', '\x3', '\x18', '\x3', '\x18', '\x3', 
		'\x19', '\x3', '\x19', '\x3', '\x19', '\x3', '\x1A', '\x5', '\x1A', '\x9F', 
		'\n', '\x1A', '\x3', '\x1B', '\x3', '\x1B', '\x5', '\x1B', '\xA3', '\n', 
		'\x1B', '\x3', '\x1C', '\x3', '\x1C', '\x3', '\x1D', '\x3', '\x1D', '\x3', 
		'\x1E', '\x3', '\x1E', '\x2', '\x2', '\x1F', '\x3', '\x3', '\x5', '\x4', 
		'\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', '\t', '\x11', 
		'\n', '\x13', '\v', '\x15', '\f', '\x17', '\r', '\x19', '\xE', '\x1B', 
		'\xF', '\x1D', '\x10', '\x1F', '\x11', '!', '\x12', '#', '\x13', '%', 
		'\x14', '\'', '\x15', ')', '\x16', '+', '\x17', '-', '\x18', '/', '\x19', 
		'\x31', '\x1A', '\x33', '\x2', '\x35', '\x2', '\x37', '\x2', '\x39', '\x1B', 
		';', '\x1C', '\x3', '\x2', '\f', '\x4', '\x2', '\v', '\v', '\"', '\"', 
		'\x4', '\x2', 'G', 'G', 'g', 'g', '\x4', '\x2', 'Q', 'Q', 'q', 'q', '\x4', 
		'\x2', 'H', 'H', 'h', 'h', '\x4', '\x2', 'K', 'K', 'k', 'k', '\x4', '\x2', 
		'N', 'N', 'n', 'n', '\x4', '\x2', 'U', 'U', 'u', 'u', '\x4', '\x2', 'P', 
		'P', 'p', 'p', '\x4', '\x2', '\x46', '\x46', '\x66', '\x66', '\x5', '\x2', 
		'\x43', '\\', '\x61', '\x61', '\x63', '|', '\x2', '\xAC', '\x2', '\x3', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x5', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', '\r', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', '\x2', '\x11', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x2', '\x17', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x19', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1B', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', '!', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', '\x2', '%', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\'', '\x3', '\x2', '\x2', '\x2', '\x2', ')', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '+', '\x3', '\x2', '\x2', '\x2', '\x2', '-', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '/', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x31', '\x3', '\x2', '\x2', '\x2', '\x2', '\x39', '\x3', '\x2', '\x2', 
		'\x2', '\x2', ';', '\x3', '\x2', '\x2', '\x2', '\x3', '=', '\x3', '\x2', 
		'\x2', '\x2', '\x5', '?', '\x3', '\x2', '\x2', '\x2', '\a', '\x41', '\x3', 
		'\x2', '\x2', '\x2', '\t', '\x43', '\x3', '\x2', '\x2', '\x2', '\v', 'I', 
		'\x3', '\x2', '\x2', '\x2', '\r', 'M', '\x3', '\x2', '\x2', '\x2', '\xF', 
		'O', '\x3', '\x2', '\x2', '\x2', '\x11', 'U', '\x3', '\x2', '\x2', '\x2', 
		'\x13', '\x64', '\x3', '\x2', '\x2', '\x2', '\x15', 'g', '\x3', '\x2', 
		'\x2', '\x2', '\x17', 'n', '\x3', '\x2', '\x2', '\x2', '\x19', 's', '\x3', 
		'\x2', '\x2', '\x2', '\x1B', 'y', '\x3', '\x2', '\x2', '\x2', '\x1D', 
		'\x81', '\x3', '\x2', '\x2', '\x2', '\x1F', '\x85', '\x3', '\x2', '\x2', 
		'\x2', '!', '\x88', '\x3', '\x2', '\x2', '\x2', '#', '\x8A', '\x3', '\x2', 
		'\x2', '\x2', '%', '\x8D', '\x3', '\x2', '\x2', '\x2', '\'', '\x8F', '\x3', 
		'\x2', '\x2', '\x2', ')', '\x91', '\x3', '\x2', '\x2', '\x2', '+', '\x93', 
		'\x3', '\x2', '\x2', '\x2', '-', '\x95', '\x3', '\x2', '\x2', '\x2', '/', 
		'\x97', '\x3', '\x2', '\x2', '\x2', '\x31', '\x9A', '\x3', '\x2', '\x2', 
		'\x2', '\x33', '\x9E', '\x3', '\x2', '\x2', '\x2', '\x35', '\xA2', '\x3', 
		'\x2', '\x2', '\x2', '\x37', '\xA4', '\x3', '\x2', '\x2', '\x2', '\x39', 
		'\xA6', '\x3', '\x2', '\x2', '\x2', ';', '\xA8', '\x3', '\x2', '\x2', 
		'\x2', '=', '>', '\a', '_', '\x2', '\x2', '>', '\x4', '\x3', '\x2', '\x2', 
		'\x2', '?', '@', '\a', '\x30', '\x2', '\x2', '@', '\x6', '\x3', '\x2', 
		'\x2', '\x2', '\x41', '\x42', '\a', '.', '\x2', '\x2', '\x42', '\b', '\x3', 
		'\x2', '\x2', '\x2', '\x43', '\x44', '\a', ']', '\x2', '\x2', '\x44', 
		'\n', '\x3', '\x2', '\x2', '\x2', '\x45', 'G', '\a', '\xF', '\x2', '\x2', 
		'\x46', '\x45', '\x3', '\x2', '\x2', '\x2', '\x46', 'G', '\x3', '\x2', 
		'\x2', '\x2', 'G', 'H', '\x3', '\x2', '\x2', '\x2', 'H', 'J', '\a', '\f', 
		'\x2', '\x2', 'I', '\x46', '\x3', '\x2', '\x2', '\x2', 'J', 'K', '\x3', 
		'\x2', '\x2', '\x2', 'K', 'I', '\x3', '\x2', '\x2', '\x2', 'K', 'L', '\x3', 
		'\x2', '\x2', '\x2', 'L', '\f', '\x3', '\x2', '\x2', '\x2', 'M', 'N', 
		'\t', '\x2', '\x2', '\x2', 'N', '\xE', '\x3', '\x2', '\x2', '\x2', 'O', 
		'P', '\a', ']', '\x2', '\x2', 'P', 'Q', '\t', '\x3', '\x2', '\x2', 'Q', 
		'R', '\t', '\x4', '\x2', '\x2', 'R', 'S', '\t', '\x5', '\x2', '\x2', 'S', 
		'T', '\a', '_', '\x2', '\x2', 'T', '\x10', '\x3', '\x2', '\x2', '\x2', 
		'U', 'V', '\a', ']', '\x2', '\x2', 'V', 'W', '\a', 'h', '\x2', '\x2', 
		'W', 'X', '\a', 'w', '\x2', '\x2', 'X', 'Y', '\a', 'p', '\x2', '\x2', 
		'Y', 'Z', '\a', '\x65', '\x2', '\x2', 'Z', '[', '\a', 'v', '\x2', '\x2', 
		'[', '\\', '\a', 'k', '\x2', '\x2', '\\', ']', '\a', 'q', '\x2', '\x2', 
		']', '^', '\a', 'p', '\x2', '\x2', '^', '`', '\x3', '\x2', '\x2', '\x2', 
		'_', '\x61', '\x5', '\r', '\a', '\x2', '`', '_', '\x3', '\x2', '\x2', 
		'\x2', '\x61', '\x62', '\x3', '\x2', '\x2', '\x2', '\x62', '`', '\x3', 
		'\x2', '\x2', '\x2', '\x62', '\x63', '\x3', '\x2', '\x2', '\x2', '\x63', 
		'\x12', '\x3', '\x2', '\x2', '\x2', '\x64', '\x65', '\t', '\x6', '\x2', 
		'\x2', '\x65', '\x66', '\t', '\x5', '\x2', '\x2', '\x66', '\x14', '\x3', 
		'\x2', '\x2', '\x2', 'g', 'h', '\t', '\x3', '\x2', '\x2', 'h', 'i', '\t', 
		'\a', '\x2', '\x2', 'i', 'j', '\t', '\b', '\x2', '\x2', 'j', 'k', '\t', 
		'\x3', '\x2', '\x2', 'k', 'l', '\t', '\x6', '\x2', '\x2', 'l', 'm', '\t', 
		'\x5', '\x2', '\x2', 'm', '\x16', '\x3', '\x2', '\x2', '\x2', 'n', 'o', 
		'\t', '\x3', '\x2', '\x2', 'o', 'p', '\t', '\a', '\x2', '\x2', 'p', 'q', 
		'\t', '\b', '\x2', '\x2', 'q', 'r', '\t', '\x3', '\x2', '\x2', 'r', '\x18', 
		'\x3', '\x2', '\x2', '\x2', 's', 't', '\t', '\x3', '\x2', '\x2', 't', 
		'u', '\t', '\t', '\x2', '\x2', 'u', 'v', '\t', '\n', '\x2', '\x2', 'v', 
		'w', '\t', '\x6', '\x2', '\x2', 'w', 'x', '\t', '\x5', '\x2', '\x2', 'x', 
		'\x1A', '\x3', '\x2', '\x2', '\x2', 'y', '}', '\x5', '\x33', '\x1A', '\x2', 
		'z', '|', '\x5', '\x35', '\x1B', '\x2', '{', 'z', '\x3', '\x2', '\x2', 
		'\x2', '|', '\x7F', '\x3', '\x2', '\x2', '\x2', '}', '{', '\x3', '\x2', 
		'\x2', '\x2', '}', '~', '\x3', '\x2', '\x2', '\x2', '~', '\x1C', '\x3', 
		'\x2', '\x2', '\x2', '\x7F', '}', '\x3', '\x2', '\x2', '\x2', '\x80', 
		'\x82', '\x5', '\x37', '\x1C', '\x2', '\x81', '\x80', '\x3', '\x2', '\x2', 
		'\x2', '\x82', '\x83', '\x3', '\x2', '\x2', '\x2', '\x83', '\x81', '\x3', 
		'\x2', '\x2', '\x2', '\x83', '\x84', '\x3', '\x2', '\x2', '\x2', '\x84', 
		'\x1E', '\x3', '\x2', '\x2', '\x2', '\x85', '\x86', '\a', '?', '\x2', 
		'\x2', '\x86', '\x87', '\a', '?', '\x2', '\x2', '\x87', ' ', '\x3', '\x2', 
		'\x2', '\x2', '\x88', '\x89', '\a', '?', '\x2', '\x2', '\x89', '\"', '\x3', 
		'\x2', '\x2', '\x2', '\x8A', '\x8B', '\a', '#', '\x2', '\x2', '\x8B', 
		'\x8C', '\a', '?', '\x2', '\x2', '\x8C', '$', '\x3', '\x2', '\x2', '\x2', 
		'\x8D', '\x8E', '\a', '@', '\x2', '\x2', '\x8E', '&', '\x3', '\x2', '\x2', 
		'\x2', '\x8F', '\x90', '\a', '>', '\x2', '\x2', '\x90', '(', '\x3', '\x2', 
		'\x2', '\x2', '\x91', '\x92', '\a', '-', '\x2', '\x2', '\x92', '*', '\x3', 
		'\x2', '\x2', '\x2', '\x93', '\x94', '\a', '/', '\x2', '\x2', '\x94', 
		',', '\x3', '\x2', '\x2', '\x2', '\x95', '\x96', '\a', ',', '\x2', '\x2', 
		'\x96', '.', '\x3', '\x2', '\x2', '\x2', '\x97', '\x98', '\x5', '%', '\x13', 
		'\x2', '\x98', '\x99', '\x5', '!', '\x11', '\x2', '\x99', '\x30', '\x3', 
		'\x2', '\x2', '\x2', '\x9A', '\x9B', '\x5', '\'', '\x14', '\x2', '\x9B', 
		'\x9C', '\x5', '!', '\x11', '\x2', '\x9C', '\x32', '\x3', '\x2', '\x2', 
		'\x2', '\x9D', '\x9F', '\t', '\v', '\x2', '\x2', '\x9E', '\x9D', '\x3', 
		'\x2', '\x2', '\x2', '\x9F', '\x34', '\x3', '\x2', '\x2', '\x2', '\xA0', 
		'\xA3', '\x5', '\x33', '\x1A', '\x2', '\xA1', '\xA3', '\x5', '\x37', '\x1C', 
		'\x2', '\xA2', '\xA0', '\x3', '\x2', '\x2', '\x2', '\xA2', '\xA1', '\x3', 
		'\x2', '\x2', '\x2', '\xA3', '\x36', '\x3', '\x2', '\x2', '\x2', '\xA4', 
		'\xA5', '\x4', '\x32', ';', '\x2', '\xA5', '\x38', '\x3', '\x2', '\x2', 
		'\x2', '\xA6', '\xA7', '\a', '*', '\x2', '\x2', '\xA7', ':', '\x3', '\x2', 
		'\x2', '\x2', '\xA8', '\xA9', '\a', '+', '\x2', '\x2', '\xA9', '<', '\x3', 
		'\x2', '\x2', '\x2', '\n', '\x2', '\x46', 'K', '\x62', '}', '\x83', '\x9E', 
		'\xA2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
