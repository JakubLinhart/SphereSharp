//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /work/sphereScript99.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public partial class sphereScript99Lexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, EOF_SECTION_HEADER=9, 
		FUNCTION_SECTION_HEADER_START=10, SYMBOL=11, NUMBER=12, PLUS=13, MINUS=14, 
		MULTIPLY=15, NEWLINE=16, WS=17, LPAREN=18, RPAREN=19;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "EOF_SECTION_HEADER", 
		"FUNCTION_SECTION_HEADER_START", "SYMBOL", "NUMBER", "PLUS", "MINUS", 
		"MULTIPLY", "NEWLINE", "WS", "VALID_SYMBOL_START", "VALID_SYMBOL_CHAR", 
		"DIGIT", "LPAREN", "RPAREN"
	};


	public sphereScript99Lexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public sphereScript99Lexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "']'", "'<'", "'>'", "'='", "'.'", "','", "' '", "'['", null, null, 
		null, null, "'+'", "'-'", "'*'", null, null, "'('", "')'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, "EOF_SECTION_HEADER", 
		"FUNCTION_SECTION_HEADER_START", "SYMBOL", "NUMBER", "PLUS", "MINUS", 
		"MULTIPLY", "NEWLINE", "WS", "LPAREN", "RPAREN"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "sphereScript99.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static sphereScript99Lexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x15', 'z', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', 
		'\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', 
		'\n', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\v', 
		'\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', 
		'\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x6', '\v', 
		'Q', '\n', '\v', '\r', '\v', '\xE', '\v', 'R', '\x3', '\f', '\x3', '\f', 
		'\a', '\f', 'W', '\n', '\f', '\f', '\f', '\xE', '\f', 'Z', '\v', '\f', 
		'\x3', '\r', '\x6', '\r', ']', '\n', '\r', '\r', '\r', '\xE', '\r', '^', 
		'\x3', '\xE', '\x3', '\xE', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', 
		'\x3', '\x10', '\x3', '\x11', '\x5', '\x11', 'h', '\n', '\x11', '\x3', 
		'\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', '\x3', '\x13', '\x5', 
		'\x13', 'o', '\n', '\x13', '\x3', '\x14', '\x3', '\x14', '\x5', '\x14', 
		's', '\n', '\x14', '\x3', '\x15', '\x3', '\x15', '\x3', '\x16', '\x3', 
		'\x16', '\x3', '\x17', '\x3', '\x17', '\x2', '\x2', '\x18', '\x3', '\x3', 
		'\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', 
		'\t', '\x11', '\n', '\x13', '\v', '\x15', '\f', '\x17', '\r', '\x19', 
		'\xE', '\x1B', '\xF', '\x1D', '\x10', '\x1F', '\x11', '!', '\x12', '#', 
		'\x13', '%', '\x2', '\'', '\x2', ')', '\x2', '+', '\x14', '-', '\x15', 
		'\x3', '\x2', '\a', '\x4', '\x2', 'G', 'G', 'g', 'g', '\x4', '\x2', 'Q', 
		'Q', 'q', 'q', '\x4', '\x2', 'H', 'H', 'h', 'h', '\x4', '\x2', '\v', '\v', 
		'\"', '\"', '\x5', '\x2', '\x43', '\\', '\x61', '\x61', '\x63', '|', '\x2', 
		'{', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', '\x5', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', '\r', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x2', '\x17', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', '!', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', '\x2', '+', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '-', '\x3', '\x2', '\x2', '\x2', '\x3', 
		'/', '\x3', '\x2', '\x2', '\x2', '\x5', '\x31', '\x3', '\x2', '\x2', '\x2', 
		'\a', '\x33', '\x3', '\x2', '\x2', '\x2', '\t', '\x35', '\x3', '\x2', 
		'\x2', '\x2', '\v', '\x37', '\x3', '\x2', '\x2', '\x2', '\r', '\x39', 
		'\x3', '\x2', '\x2', '\x2', '\xF', ';', '\x3', '\x2', '\x2', '\x2', '\x11', 
		'=', '\x3', '\x2', '\x2', '\x2', '\x13', '?', '\x3', '\x2', '\x2', '\x2', 
		'\x15', '\x45', '\x3', '\x2', '\x2', '\x2', '\x17', 'T', '\x3', '\x2', 
		'\x2', '\x2', '\x19', '\\', '\x3', '\x2', '\x2', '\x2', '\x1B', '`', '\x3', 
		'\x2', '\x2', '\x2', '\x1D', '\x62', '\x3', '\x2', '\x2', '\x2', '\x1F', 
		'\x64', '\x3', '\x2', '\x2', '\x2', '!', 'g', '\x3', '\x2', '\x2', '\x2', 
		'#', 'k', '\x3', '\x2', '\x2', '\x2', '%', 'n', '\x3', '\x2', '\x2', '\x2', 
		'\'', 'r', '\x3', '\x2', '\x2', '\x2', ')', 't', '\x3', '\x2', '\x2', 
		'\x2', '+', 'v', '\x3', '\x2', '\x2', '\x2', '-', 'x', '\x3', '\x2', '\x2', 
		'\x2', '/', '\x30', '\a', '_', '\x2', '\x2', '\x30', '\x4', '\x3', '\x2', 
		'\x2', '\x2', '\x31', '\x32', '\a', '>', '\x2', '\x2', '\x32', '\x6', 
		'\x3', '\x2', '\x2', '\x2', '\x33', '\x34', '\a', '@', '\x2', '\x2', '\x34', 
		'\b', '\x3', '\x2', '\x2', '\x2', '\x35', '\x36', '\a', '?', '\x2', '\x2', 
		'\x36', '\n', '\x3', '\x2', '\x2', '\x2', '\x37', '\x38', '\a', '\x30', 
		'\x2', '\x2', '\x38', '\f', '\x3', '\x2', '\x2', '\x2', '\x39', ':', '\a', 
		'.', '\x2', '\x2', ':', '\xE', '\x3', '\x2', '\x2', '\x2', ';', '<', '\a', 
		'\"', '\x2', '\x2', '<', '\x10', '\x3', '\x2', '\x2', '\x2', '=', '>', 
		'\a', ']', '\x2', '\x2', '>', '\x12', '\x3', '\x2', '\x2', '\x2', '?', 
		'@', '\a', ']', '\x2', '\x2', '@', '\x41', '\t', '\x2', '\x2', '\x2', 
		'\x41', '\x42', '\t', '\x3', '\x2', '\x2', '\x42', '\x43', '\t', '\x4', 
		'\x2', '\x2', '\x43', '\x44', '\a', '_', '\x2', '\x2', '\x44', '\x14', 
		'\x3', '\x2', '\x2', '\x2', '\x45', '\x46', '\a', ']', '\x2', '\x2', '\x46', 
		'G', '\a', 'h', '\x2', '\x2', 'G', 'H', '\a', 'w', '\x2', '\x2', 'H', 
		'I', '\a', 'p', '\x2', '\x2', 'I', 'J', '\a', '\x65', '\x2', '\x2', 'J', 
		'K', '\a', 'v', '\x2', '\x2', 'K', 'L', '\a', 'k', '\x2', '\x2', 'L', 
		'M', '\a', 'q', '\x2', '\x2', 'M', 'N', '\a', 'p', '\x2', '\x2', 'N', 
		'P', '\x3', '\x2', '\x2', '\x2', 'O', 'Q', '\x5', '#', '\x12', '\x2', 
		'P', 'O', '\x3', '\x2', '\x2', '\x2', 'Q', 'R', '\x3', '\x2', '\x2', '\x2', 
		'R', 'P', '\x3', '\x2', '\x2', '\x2', 'R', 'S', '\x3', '\x2', '\x2', '\x2', 
		'S', '\x16', '\x3', '\x2', '\x2', '\x2', 'T', 'X', '\x5', '%', '\x13', 
		'\x2', 'U', 'W', '\x5', '\'', '\x14', '\x2', 'V', 'U', '\x3', '\x2', '\x2', 
		'\x2', 'W', 'Z', '\x3', '\x2', '\x2', '\x2', 'X', 'V', '\x3', '\x2', '\x2', 
		'\x2', 'X', 'Y', '\x3', '\x2', '\x2', '\x2', 'Y', '\x18', '\x3', '\x2', 
		'\x2', '\x2', 'Z', 'X', '\x3', '\x2', '\x2', '\x2', '[', ']', '\x5', ')', 
		'\x15', '\x2', '\\', '[', '\x3', '\x2', '\x2', '\x2', ']', '^', '\x3', 
		'\x2', '\x2', '\x2', '^', '\\', '\x3', '\x2', '\x2', '\x2', '^', '_', 
		'\x3', '\x2', '\x2', '\x2', '_', '\x1A', '\x3', '\x2', '\x2', '\x2', '`', 
		'\x61', '\a', '-', '\x2', '\x2', '\x61', '\x1C', '\x3', '\x2', '\x2', 
		'\x2', '\x62', '\x63', '\a', '/', '\x2', '\x2', '\x63', '\x1E', '\x3', 
		'\x2', '\x2', '\x2', '\x64', '\x65', '\a', ',', '\x2', '\x2', '\x65', 
		' ', '\x3', '\x2', '\x2', '\x2', '\x66', 'h', '\a', '\xF', '\x2', '\x2', 
		'g', '\x66', '\x3', '\x2', '\x2', '\x2', 'g', 'h', '\x3', '\x2', '\x2', 
		'\x2', 'h', 'i', '\x3', '\x2', '\x2', '\x2', 'i', 'j', '\a', '\f', '\x2', 
		'\x2', 'j', '\"', '\x3', '\x2', '\x2', '\x2', 'k', 'l', '\t', '\x5', '\x2', 
		'\x2', 'l', '$', '\x3', '\x2', '\x2', '\x2', 'm', 'o', '\t', '\x6', '\x2', 
		'\x2', 'n', 'm', '\x3', '\x2', '\x2', '\x2', 'o', '&', '\x3', '\x2', '\x2', 
		'\x2', 'p', 's', '\x5', '%', '\x13', '\x2', 'q', 's', '\x5', ')', '\x15', 
		'\x2', 'r', 'p', '\x3', '\x2', '\x2', '\x2', 'r', 'q', '\x3', '\x2', '\x2', 
		'\x2', 's', '(', '\x3', '\x2', '\x2', '\x2', 't', 'u', '\x4', '\x32', 
		';', '\x2', 'u', '*', '\x3', '\x2', '\x2', '\x2', 'v', 'w', '\a', '*', 
		'\x2', '\x2', 'w', ',', '\x3', '\x2', '\x2', '\x2', 'x', 'y', '\a', '+', 
		'\x2', '\x2', 'y', '.', '\x3', '\x2', '\x2', '\x2', '\t', '\x2', 'R', 
		'X', '^', 'g', 'n', 'r', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
